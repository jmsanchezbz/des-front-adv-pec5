{"ast":null,"code":"function cov_282yzc9uum() {\n  var path = \"/home/jose/workspace/uoc/des-front-adv/pec4/sol-pec2-obs-blog-uoc-project-front/src/polyfills.ts\";\n  var hash = \"9aab71c1c9a8b059499770f99c1620cad170e84e\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/jose/workspace/uoc/des-front-adv/pec4/sol-pec2-obs-blog-uoc-project-front/src/polyfills.ts\",\n    statementMap: {},\n    fnMap: {},\n    branchMap: {},\n    s: {},\n    f: {},\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      file: \"polyfills.js\",\n      sourceRoot: \"\",\n      sources: [\"/home/jose/workspace/uoc/des-front-adv/pec4/sol-pec2-obs-blog-uoc-project-front/src/polyfills.ts\"],\n      names: [],\n      mappings: \"AAAA;;;;;;;;;;;;;;GAcG;AAEH;;GAEG;AAEH;;GAEG;AACH,oEAAoE;AAEpE;;;;GAIG;AACH,8EAA8E;AAE9E;;;;;;;;;;;;;;;;;;;;;;GAsBG;AAEH;;GAEG;AACH,OAAO,SAAS,CAAC,CAAE,6BAA6B;AAGhD;;GAEG\",\n      sourcesContent: [\"/**\\n * This file includes polyfills needed by Angular and is loaded before the app.\\n * You can add your own extra polyfills to this file.\\n *\\n * This file is divided into 2 sections:\\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\\n *      file.\\n *\\n * The current setup is for so-called \\\"evergreen\\\" browsers; the last versions of browsers that\\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\\n *\\n * Learn more in https://angular.io/guide/browser-support\\n */\\n\\n/***************************************************************************************************\\n * BROWSER POLYFILLS\\n */\\n\\n/**\\n * IE11 requires the following for NgClass support on SVG elements\\n */\\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\\n\\n/**\\n * Web Animations `@angular/platform-browser/animations`\\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\\n */\\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\\n\\n/**\\n * By default, zone.js will patch all possible macroTask and DomEvents\\n * user can disable parts of macroTask/DomEvents patch by setting following flags\\n * because those flags need to be set before `zone.js` being loaded, and webpack\\n * will put import in the top of bundle, so user need to create a separate file\\n * in this directory (for example: zone-flags.ts), and put the following flags\\n * into that file, and then add the following code before importing zone.js.\\n * import './zone-flags';\\n *\\n * The flags allowed in zone-flags.ts are listed here.\\n *\\n * The following flags will work for all browsers.\\n *\\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\\n *\\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\\n *\\n *  (window as any).__Zone_enable_cross_context_check = true;\\n *\\n */\\n\\n/***************************************************************************************************\\n * Zone JS is required by default for Angular itself.\\n */\\nimport 'zone.js';  // Included with Angular CLI.\\n\\n\\n/***************************************************************************************************\\n * APPLICATION IMPORTS\\n */\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"9aab71c1c9a8b059499770f99c1620cad170e84e\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_282yzc9uum = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\ncov_282yzc9uum();\n/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n/**\n * IE11 requires the following for NgClass support on SVG elements\n */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js'; // Included with Angular CLI.\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */","map":{"version":3,"names":["cov_282yzc9uum","actualCoverage"],"sources":["/home/jose/workspace/uoc/des-front-adv/pec4/sol-pec2-obs-blog-uoc-project-front/src/polyfills.ts"],"sourcesContent":["/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * IE11 requires the following for NgClass support on SVG elements\n */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgBA;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAhBA;;;;;;;;;;;;;;;AAgBA;;;AAIA;;;AAGA;AAEA;;;;;AAKA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;AAGA,OAAO,SAAS,CAAC,CAAE;AAGnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}